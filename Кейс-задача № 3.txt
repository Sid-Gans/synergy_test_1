import mysql.connector
from mysql.connector import Error

class TourismDB:
    def __init__(self, host, user, password, database):
        self.connection = None
        try:
            self.connection = mysql.connector.connect(
                host=host,
                user=user,
                password=password,
                database=database
            )
            print("Подключение к MySQL успешно установлено")
        except Error as e:
            print(f"Ошибка подключения к MySQL: {e}")

    def execute_query(self, query, params=None):
        cursor = self.connection.cursor()
        try:
            cursor.execute(query, params or ())
            self.connection.commit()
            print("Запрос выполнен успешно")
            return cursor
        except Error as e:
            print(f"Ошибка выполнения запроса: {e}")
            return None

    def fetch_data(self, query, params=None):
        cursor = self.execute_query(query, params)
        if cursor:
            return cursor.fetchall()
        return None

    def close(self):
        if self.connection:
            self.connection.close()
            print("Соединение с MySQL закрыто")

# Пример использования
def main():
    db = TourismDB(host='localhost', user='root', password='password', database='tourism')
    
    # Добавление тестовых данных
    try:
        # Добавляем страну
        db.execute_query(
            "INSERT INTO Countries (country_name, visa_required, climate) VALUES (%s, %s, %s)",
            ('Италия', True, 'умеренный')
        )
        
        # Добавляем отель
        db.execute_query(
            "INSERT INTO Hotels (hotel_name, country_id, city, star_rating, address) "
            "VALUES (%s, %s, %s, %s, %s)",
            ('Grand Hotel', 1, 'Рим', 5, 'Via Veneto, 123')
        )
        
        # Добавляем клиента
        db.execute_query(
            "INSERT INTO Clients (last_name, first_name, passport_number, phone, registration_date) "
            "VALUES (%s, %s, %s, %s, %s)",
            ('Иванов', 'Иван', '1234567890', '+79991234567', '2023-01-15')
        )
        
        # Добавляем услугу
        db.execute_query(
            "INSERT INTO Services (service_name, description, price, duration_days) "
            "VALUES (%s, %s, %s, %s)",
            ('Экскурсионный тур по Италии', 'Посещение Рима, Венеции и Флоренции', 120000.00, 10)
        )
        
        # Создаем заказ
        db.execute_query(
            "INSERT INTO Orders (client_id, service_id, hotel_id, order_date, start_date, end_date, total_price) "
            "VALUES (%s, %s, %s, %s, %s, %s, %s)",
            (1, 1, 1, '2023-02-01', '2023-06-15', '2023-06-25', 150000.00)
        )
        
        # Получаем информацию о заказах
        orders = db.fetch_data(
            "SELECT o.order_id, c.last_name, s.service_name, h.hotel_name, o.start_date, o.end_date, o.total_price "
            "FROM Orders o "
            "JOIN Clients c ON o.client_id = c.client_id "
            "JOIN Services s ON o.service_id = s.service_id "
            "LEFT JOIN Hotels h ON o.hotel_id = h.hotel_id"
        )
        
        print("\nСписок заказов:")
        for order in orders:
            print(order)
            
    except Error as e:
        print(f"Ошибка при работе с базой данных: {e}")
    finally:
        db.close()

if __name__ == "__main__":
    main()
